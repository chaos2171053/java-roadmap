version: '3.7'

services:
  mysql:
    image: mysql:latest
    container_name: seckill-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: seckill
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql

  spring-app1:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    container_name: spring-app1-container
    ports:
      - "8081:8080"  # 这里指定了 spring-app1 服务的端口号为 8081
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/seckill
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

  spring-app2:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    container_name: spring-app2-container
    ports:
      - "8082:8080"  # 这里指定了 spring-app2 服务的端口号为 8082
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/seckill
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
  spring-app3:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    container_name: spring-app3-container
    ports:
      - "8083:8080"  # 这里指定了 spring-app3 服务的端口号为 8083
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/seckill
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
  spring-app4:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    container_name: spring-app4-container
    ports:
      - "8084:8080"  # 这里指定了 spring-app4 服务的端口号为 8084
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/seckill
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - spring-app1
      - spring-app2
      - spring-app3
      - spring-app4
    networks:
      - default
volumes:
  mysql-data:
